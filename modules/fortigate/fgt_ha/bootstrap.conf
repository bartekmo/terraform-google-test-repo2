%{ if hostname != "" ~}
config system global
    set hostname ${hostname}
end
%{ endif ~}
%{ if password != "" ~}
config system admin
    edit "admin"
        set password ${password}
    next
end
%{ endif ~}

config system interface
%{ for port, info in subnets_info ~}
    edit ${port}
        set mode static
        set ip ${private_ips[port].address}/32
        %{~ if port == mgmt_port ~}
        set allowaccess ping ssh https
        %{~ else ~}
        set allowaccess ping https
        %{~ endif ~}
        %{~ if length(network_interfaces[port].ilb_ip) > 0 || length(network_interfaces[port].elb_ip) > 0 ~}
        set secondary-IP enable
        config secondaryip
        %{~ for ilb_ip in network_interfaces[port].ilb_ip ~}
            edit 0
                set ip ${ilb_ip}/32
                set allowaccess probe-response
            next
        %{~ endfor ~}
        %{~ for elb_ip in network_interfaces[port].elb_ip ~}
            edit 0
                set ip ${elb_ip}/32
                set allowaccess probe-response
            next
        %{~ endfor ~}
        end
        %{~ endif ~}
    next
%{ endfor ~}
end

config route static
%{ for port, info in subnets_info ~}
    %{~ if (ha_mode == "fgcp-ap" && port != mgmt_port && port != ha_port) || (ha_mode != "fgcp-ap" && port != ha_port) ~}
    edit 0
        set dst ${info.ip_cidr_range}
        set gateway ${info.gateway_address}
        set device ${port}
        set comment "Route for ${port}"
    next
    %{~ endif ~}
    %{~ if port=="port1" ~}
    edit 0
        set device port1
        set gateway ${info.gateway_address}
        set comment "Default route"
    next
    %{~ endif ~}
    %{~ if length(network_interfaces[port].ilb_ip) > 0 ~}
    edit 0
        set device ${port}
        set gateway ${info.gateway_address}
        set dst 35.191.0.0/16
        set comment "Load balancer health check"
    next
    edit 0
        set device ${port}
        set gateway ${info.gateway_address}
        set dst 130.211.0.0/22
        set comment "Load balancer health check"
    next
    %{~ endif ~}
%{ endfor ~}
end

config system sdn-connector
    edit "gcp"
        set type gcp
    next
end
config system probe-response
    set mode http-probe
end

%{ if ha_mode == "fgcp-ap" ~}
config system ha
    set mode a-p
    set group-name "gcp-group"
    set password "${ha_password}"
    set priority ${priority}
    set hbdev "${ha_port}" 50
    set override enable
    set session-pickup enable
    set ha-mgmt-status enable
    config ha-mgmt-interfaces
        edit 1
            set interface "${mgmt_port}"
            set gateway ${subnets_info[mgmt_port].gateway_address}
        next
    end
    set unicast-hb enable
    set unicast-hb-peerip ${peerip}
    set unicast-hb-netmask ${netmask}
end
%{ endif ~}

%{ if ha_mode == "fgsp-aa" ~}
config system ha
    set session-pickup enable
    set session-pickup-connectionless enable
    set session-pickup-nat enable
end
config system standalone-cluster
    set standalone-group-id 1
    set group-member-id ${index}
    config cluster-peer
        edit 1
            set peerip ${peerip}
        next
    end
end
%{ endif ~}

%{ if fortiflex_token != "" ~}
execute vm-license ${fortiflex_token}
execute reboot
%{ endif ~}
${config_script}
